# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs every ~ 6 hours
  schedule:
    - cron: "18 */6 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          token: ${{ secrets.GH_PAT }}
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Fetch Data
        id: fetchdata
        run: |
          data=$(curl -s 'https://www.google.com/alerts/feeds/15522468311074638514/5134974349803283431')
          data=$(echo "$data" | base64 --wrap=0)
          echo "data=$data" >> $GITHUB_OUTPUT
      # - name: Update Articles
      #   # https://pkg.go.dev/github.com/mikefarah/yq/v4#section-readme
      #   uses: mikefarah/yq@master
      #   with:
      #     cmd: echo "${{ steps.fetchdata.outputs.data }}" | base64 -d | yq e -r -p=xml '.feed.entry[] | [.id, .published, .updated, .title.+content, .content.+content, .link.+@href] | @csv' >> _data/articles.csv
      - name: Install yq package
        # https://pkg.go.dev/github.com/mikefarah/yq/v4#section-readme
        uses: mikefarah/yq@master
      - name: Update Articles
        id: update_articles
        run: |
          decoded_data=$(echo "${{ steps.fetchdata.outputs.data }}" | base64 -d)
          echo "$decoded_data"
          echo "$decoded_data" | yq e -o=json -I=0 -r -p=xml '.feed.entry' | jq -r '.[] | [.id, .published, .updated, .title."+content", .content."+content", .link."+@href", (if (.link."+@href" != null and (.link."+@href" | type) == "string" and (.link."+@href" | test("url=https://(?:www\\.)?(.*?)"))) then .link."+@href" | capture("url=https://(?:www\\.)?(?<publisher>.*?)/").publisher else "" end)] | @csv' >> _data/articles.csv
      - name: Deduplicate CSV
        run: |
          awk -F, '!seen[$0]++' _data/articles.csv > deduped_articles.csv
          mv deduped_articles.csv _data/articles.csv
      # - name: Set Up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: "3.10"
      #   run: python analyze.py -file _data/articles.csv
      - name: Commit And Push New Articles
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "github-actions"
          git add _data/articles.csv
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update daily articles" && git push https://${{ secrets.GH_PAT }}@github.com/leppekja/snap_news.git HEAD:main)
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
